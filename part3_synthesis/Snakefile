rule all:
    input:
        'figures/connectivity.pdf',
        'figures/statistics.pdf'

rule magicPreprocessing:
    '''Perform a magic preprocessing.'''
    input:
        'structural_data/neuron_array.npy',
        'structural_data/structure_array.npy',
        'structural_data/synapse_matrix.npy',
        'structural_data/weight_matrix.npy'
    output:
        'structural_data_preprocessed/neuron_array.npy',
        'structural_data_preprocessed/structure_array.npy',
        'structural_data_preprocessed/synapse_matrix.npy',
        'structural_data_preprocessed/weight_matrix.npy'
    shell:
        'cp structural_data/*.npy structural_data_preprocessed/ && sleep 5s'

rule simulateNetwork:
    '''Simulate the multi-area network.'''
    input:
        'neuron_parameters.yaml',
        'structural_data_preprocessed/structure_array.npy',
        'structural_data_preprocessed/neuron_array.npy',
        'structural_data_preprocessed/synapse_matrix.npy',
        'structural_data_preprocessed/weight_matrix.npy'
    output:
        'simulated_activity/spikes.npy',
        'simulated_activity/simulation_config.yaml'
    shell:
        'python3 scripts/simulateMultiareaNetwork.py {input} {output}'

rule calculateStatistics:
    '''Calculate population averaged rates and CVs.'''
    input:
        'simulated_activity/spikes.npy',
        'simulated_activity/simulation_config.yaml'
    output:
        'simulated_activity/statistics.npy'
    shell:
        'python3 scripts/calculateStatistics.py {input} {output}'

rule plotConnectivity:
    '''Plot connectivity matrix.'''
    input:
        'structural_data_preprocessed/synapse_matrix.npy'
    output:
        'figures/connectivity.pdf'
    shell:
        'python3 scripts/plotConnectivity.py {input} {output}'

rule plotStatistics:
    '''Plot rate and CV histogram.'''
    input:
        'simulated_activity/statistics.npy'
    output:
        'figures/statistics.pdf'
    shell:
        'python3 scripts/plotStatistics.py {input} {output}'
